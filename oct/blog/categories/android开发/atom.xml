<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Android开发 | 小默的研究中心]]></title>
  <link href="http://wangxiaomo.github.com/blog/categories/android开发/atom.xml" rel="self"/>
  <link href="http://wangxiaomo.github.com/"/>
  <updated>2012-06-12T19:58:29+08:00</updated>
  <id>http://wangxiaomo.github.com/</id>
  <author>
    <name><![CDATA[wangxiaomo]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Android Thread 退出错误问题.]]></title>
    <link href="http://wangxiaomo.github.com/blog/2012/04/18/Android+Thread+%E9%80%80%E5%87%BA%E9%94%99%E8%AF%AF%E9%97%AE%E9%A2%98./"/>
    <updated>2012-04-18T08:42:00+08:00</updated>
    <id>http://wangxiaomo.github.com/blog/2012/04/18/Android Thread 退出错误问题.</id>
    <content type="html"><![CDATA[<p>Android Thread 退出的时候遇到了问题.无法 destory. 最后搜索到一个比较靠谱的文章. 说可以通过设置一个布尔变量来把 Thread 函数 return 掉就可以了.</p>

<pre lang="java">
class RingThread extends Thread {
    MediaPlayer mPlayer;
    Context mContext;
    boolean flag;
    
    public RingThread(Context context){
      mPlayer = new MediaPlayer();
      mContext = context;
      flag = false;
    }
    
    @Override
    public void run(){
      Uri alert = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_ALARM);
      try {

        mPlayer.setDataSource(mContext, alert);
        final AudioManager audioManager = (AudioManager) getSystemService(Context.AUDIO_SERVICE);
        if (audioManager.getStreamVolume(AudioManager.STREAM_ALARM) != 0) {
            mPlayer.setAudioStreamType(AudioManager.STREAM_ALARM);          
            if(mPlayer.isPlaying()){
              mPlayer.stop();
              mPlayer.reset();
            }
            mPlayer.setLooping(true);
            mPlayer.prepare();
            mPlayer.start();
        }
      } catch (IllegalStateException e) {
        e.printStackTrace();
      } catch (IOException e) {
        e.printStackTrace();
      }
      if(flag){
        return;
      }
    }
    
    public void stop_ringing(){
      mPlayer.stop();
      flag = true;
    }
  }
</pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android重力感应DEMO]]></title>
    <link href="http://wangxiaomo.github.com/blog/2011/08/26/Android%E9%87%8D%E5%8A%9B%E6%84%9F%E5%BA%94DEMO/"/>
    <updated>2011-08-26T14:30:00+08:00</updated>
    <id>http://wangxiaomo.github.com/blog/2011/08/26/Android重力感应DEMO</id>
    <content type="html"><![CDATA[<pre lang="java">
package test.common;
 
import android.app.Activity; 
import android.os.Bundle; 
import android.hardware.SensorManager; 
import android.hardware.Sensor; 
import android.hardware.SensorEventListener; 
import android.hardware.SensorEvent; 

public class main extends Activity { 
    private float x, y, z; 
    protected void onCreate(Bundle savedInstanceState) { 
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);
        SensorManager sensorMgr = (SensorManager) getSystemService(SENSOR_SERVICE);
        Sensor sensor = sensorMgr.getDefaultSensor(Sensor.TYPE_ACCELEROMETER);
        /*TYPE注解
        intTYPE_ACCELEROMETER 加速度
        intTYPE_ALL 所有类型，NexusOne默认为 加速度
        intTYPE_GYROSCOPE 回转仪(这个不太懂)
        intTYPE_LIGHT 光线感应
        intTYPE_MAGNETIC_FIELD 磁场
        intTYPE_ORIENTATION 定向（指北针）和角度
        intTYPE_PRESSUR 压力计
        intTYPE_PROXIMITY 距离？不太懂
        intTYPE_TEMPERATURE 温度啦
        */

        SensorEventListener lsn = new SensorEventListener() {
            public void onSensorChanged(SensorEvent e) {
                x = e.values[SensorManager.DATA_X]; 
                y = e.values[SensorManager.DATA_Y]; 
                z = e.values[SensorManager.DATA_Z];
                setTitle("x="+(int)x+","+"y="+(int)y+","+"z="+(int)z);
            }

            public void onAccuracyChanged(Sensor s, int accuracy) {
            }

        };

        //注册listener，第三个参数是检测的灵敏度
        sensorMgr.registerListener(lsn, sensor, SensorManager.SENSOR_DELAY_GAME);
        /*
        SENSOR_DELAY_FASTEST 最灵敏，快的然你无语
        SENSOR_DELAY_GAME 游戏的时候用这个，不过一般用这个就够了，和上一个很难看出区别
        SENSOR_DELAY_NORMAL 比较慢。
        SENSOR_DELAY_UI 最慢的，几乎就是横和纵的区别
        */
    }
}
</pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android重力感应编程思路]]></title>
    <link href="http://wangxiaomo.github.com/blog/2011/08/26/Android%E9%87%8D%E5%8A%9B%E6%84%9F%E5%BA%94%E7%BC%96%E7%A8%8B%E6%80%9D%E8%B7%AF/"/>
    <updated>2011-08-26T13:40:00+08:00</updated>
    <id>http://wangxiaomo.github.com/blog/2011/08/26/Android重力感应编程思路</id>
    <content type="html"><![CDATA[<p>添加当重力变化时的处理函数
在创建监听器时调用的函数 doSomething(x, y, z) 是自己定义的方法。
当手机倾斜方向改变时，监听器会调用该方法。
我们要做的，就是填充该方法，用于在重力发生变化时进行我们自己的处理。
当 x=y=0 时，手机处于水平放置状态。
当 x=0 并且 y>0 时，手机顶部的水平位置要大于底部，也就是一般接听电话时手机所处的状态。
当 x=0 并且 y<0 时，手机顶部的水平位置要小于底部。手机一般很少处于这种状态。
当 y=0 并且 x>0 时，手机右侧的水平位置要大于左侧，也就是右侧被抬起。
当 y=0 并且 x<0 时，手机右侧的水平位置要小于左侧，也就是左侧被抬起。
当 z=0 时，手机平面与水平面垂直。
当 z>0 时，手机屏幕朝上。
当 z&lt;0 时，手机屏幕朝下。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Content Provider设计.]]></title>
    <link href="http://wangxiaomo.github.com/blog/2011/06/27/Content+Provider%E8%AE%BE%E8%AE%A1./"/>
    <updated>2011-06-27T06:51:00+08:00</updated>
    <id>http://wangxiaomo.github.com/blog/2011/06/27/Content Provider设计.</id>
    <content type="html"><![CDATA[<p>Content Provide用来保存和检索数据,并使应用程序之间相互访问数据成为可能,它是跨应用程序共享数据的唯一方法.
Android为常用的数据类型提供了大量的Content Provider.他们被定义在android.provider包下面.通过定义好的Content Provider我们可以方便的进行数据操作.当然,我们必须拥有适当的权限.
ContentProvider定义在android.content包下面,我们定义一个ContentProvider必须实现几个抽象方法.</p>

<pre lang="bash">
query(Uri,String[],String,String[],String) 查询
insert(Uri,ContentValues) 插入
update(Uri,ContentValues,String,String[]) 更新
delete(Uri,String,String[]) 删除
getType(Uri) 获得MIME数据类型.
</pre>


<p>我们是在ContentProvider中实现我们实际操作数据的方法.但是在客户端调用时,我们用到了另外一个接口.它就是ContentResolver.ContentResolver提供和ContentProvider对应的方法.
ContentProvider是通过URI来实现共享的.一个URI对象必须以"content://"开头,接下来是URI的授权部分,这部分内容要和AndroidManifest.xml配置文件中声明的授权内容一致.后面还可能有数据类型和记录ID.
通过URI可以使ContentResolver知道和哪个ContentProvider对应,并且来操作哪些表和哪些记录.</p>

<pre lang="java">
private void query(){
     //获得ContentReslover实例.
     ContentResolver cr = getContentResolver();
     //定义Uri.
     Uri uri = Contacts.People.CONTENT_URI;
     //定义查询类数组.
     String[] projection = {Contacts.PeopleColumns.NAME,Contacts.PeopleColumns.NOTES};
     //定义查询条件.
     String selection = Contacts.PeopleColumns.NAME + "=?";
     //查询条件参数.
     String[] selectionArgs = {"Amaker"};
     String sortOrder = Contacts.PeopleColumns.NAME;
     Cursor c = cr.query(uri,projection,selection,selectionArgs,sortorder);
     if(c.moveToFirst()){
          for(int i=0;i<c.getCount();i++){
               c.moveToPosition(i);
               int idx = c.getColumnIndexOrThrow(PeopleColumns.NAME);
               Log.i("Test", c.getSting(idx));
          }
     }
}
</pre>


<p>如果要在应用中添加一个联系人..</p>

<pre lang="java">
private void insert(){
    ContentResolver cr = getContentResolver();
    ContentValues values = new ContentValues();
    Uri uri = Contacts.People.CONTENT_URI;
    values.put(People.NAME, "wxm");
    values.put(People.NOTES,"asd");
    cr.insert(uri, values);
}
</pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SQLite类应用实例.]]></title>
    <link href="http://wangxiaomo.github.com/blog/2011/06/27/SQLite%E7%B1%BB%E5%BA%94%E7%94%A8%E5%AE%9E%E4%BE%8B./"/>
    <updated>2011-06-27T04:51:00+08:00</updated>
    <id>http://wangxiaomo.github.com/blog/2011/06/27/SQLite类应用实例.</id>
    <content type="html"><![CDATA[<pre lang="java">
package com.amaker.test;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;

//数据库帮助类.
public class DBHelper extends SQLiteOpenHelper{
    //数据库名称
    private static final String DB_NAME = "coll.db";
    //表名称
    private static final String TBL_NAME = "CollTbl";
    private static final String CREATE_TBL = "create table "
           + " CollTbl(_id integer primary key autoincrement,"
           + "name text,"
           + "url text"
           + "desc text)";
    private SQLiteDatabase db;
    
    DBHelper(Context c){
        super(c, DB_NAME, null, 2);
    }
    @Override
    public void onCreate(SQLiteDatabase db){
        this.db = db;
        db.execSQL(CREATE_TABLE);
    }
    public void insert(ContentValues values){
        SQLiteDatabase db = getWritableDatabase();
        db.insert(TBL_NAME, null, values);
        db.close();
    }
    public Cursor query(){
        SQLiteDatabase db = getWritableDatabase();
        Cursor c = db.query(TBL_NAME, null, null, null, null, null, null);
        return c;
    }
    public void del(int id){
        if(db == null){
            db = getWritableDatabase();
        }
        db.delete(TBL_NAME,"_id=?", new String[]{String.valueOf(id)});
    }
    public void close(){
        if(db!=null){
              db.close();
        }
    }
    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion){
     }
}
</pre>

]]></content>
  </entry>
  
</feed>
