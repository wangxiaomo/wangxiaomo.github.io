<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 乱七八糟 | 小默的研究中心]]></title>
  <link href="http://wangxiaomo.github.com/blog/categories/乱七八糟/atom.xml" rel="self"/>
  <link href="http://wangxiaomo.github.com/"/>
  <updated>2012-06-12T19:58:29+08:00</updated>
  <id>http://wangxiaomo.github.com/</id>
  <author>
    <name><![CDATA[wangxiaomo]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[面试...]]></title>
    <link href="http://wangxiaomo.github.com/blog/2012/04/25/%E9%9D%A2%E8%AF%95.../"/>
    <updated>2012-04-25T12:39:00+08:00</updated>
    <id>http://wangxiaomo.github.com/blog/2012/04/25/面试...</id>
    <content type="html"><![CDATA[<p>1.闭包概念.闭包应用环境.闭包这个词的来源.
  闭包(Closure)是词法闭包(Lexical Closure)的简称。可以在词法上下文中引用自由变量。即使在自由变量离开了作用范围。
2.lambda好处.函数式编程.意义?作用?
  精简代码，省去复杂的定义过程。对于一些抽象的，不存在复用的函数定义起来不需要考虑命名。有些情况下还可以使代码更容易被理解。
  函数式编程：没有变量和副作用。经常使用递归。
3.php return 和 exit 区别.exit退出时系统做了什么·
4.sae如何搭建
5.负载均衡.\</p>

<p>最最输在的地方是紧张和自我介绍.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SAE环境.]]></title>
    <link href="http://wangxiaomo.github.com/blog/2012/04/20/SAE%E7%8E%AF%E5%A2%83./"/>
    <updated>2012-04-20T17:35:00+08:00</updated>
    <id>http://wangxiaomo.github.com/blog/2012/04/20/SAE环境.</id>
    <content type="html"><![CDATA[<p>SAE应用开发与标准的LAMP的差异基本在以下几个地方:</p>

<pre lang="bash">
传统LAMP环境             SAE平台环境

本地I/O             =>   TmpFS/Wrapper
htaccess            =>   Appconfig
网络I/O             =>   FetchURL
Mail                =>   SaeMail
</pre>


<p>1.Appconfig 替代 htaccess.
安全.实现更高效.语法更人性化.
2.MySQL分布式数据库服务.通过RDC提供.
RDC是Relational DB Cluster（关系型数据库集群）的简称，是一种分布式的关系型数据库集群，主要用在支撑公有云计算平台的数据库集群，目前RDC支持的存储后端为MySQL（http://www.mysql.com/）。用户可以简单的理解RDC为MySQL的中间层或者代理层，类似MySQL Proxy。所有的SQL请求都由RDC传递到后端的实际存储上。RDC可以支持千万级的数据库后端，其自身也支持分布式水平扩展. RDC由Sina App Engine（http://sae.sina.com.cn）技术团队开发，目前用来支持Sina App Engine的分布式数据库。RDC虽然为分布式数据库集群，但是对终端用户完全透明，用户在使用RDC时，不会感觉到和使用传统的MySQL数据库有任何差异，甚至用户都不用知道RDC的存在。用户可以使用所有MySQL标准客户端（MySQL5以上）操作RDC，如mysql_query、mysql_connect等，错误处理和标准MySQL客户端处理模式一样。 RDC拥有强大的监控功能，能够实时监控用户的DB的健康状况和同步延迟情况，一旦发现异常，将会在15秒内完成切换工作，用户的请求会被转发到其他正常的机器上。RDC自身采用的是多进程非阻塞方式的通讯框架，自身性能消耗较少，根据内部测试，其代理层性能损耗在5%以内。RDC因为100%兼容MySQL5协议，所以对于普通开发者几乎没有任何学习成本，开发者根本无需关心RDC，甚至无需知道RDC的存在，只需和使用普通MySQL一样就可以了。
3.Memcache分布式缓存服务
4.Storage分布式文件存储服务
5.KVDB分布式key-value持久化存储
6.Cron分布式定时服务
7.Image分布式图像处理服务
8.FetchURL分布式网页抓取服务
9.Mail分布式邮件服务
10.TaskQueue异步轻量级任务队列
11.DeferredQueue异步大任务延迟队列
12.Counter分布式计数器服务
13.Rank实时排行榜服务
14.Appconfig应用配置模块.
15.TmpFS本地临时文件读写模块
16.Wrappers文件读写兼容接口
17.XHProf.PHP调试工具.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[3月或3月初？ 感慨。]]></title>
    <link href="http://wangxiaomo.github.com/blog/2012/03/07/3%E6%9C%88%E6%88%963%E6%9C%88%E5%88%9D%EF%BC%9F+%E6%84%9F%E6%85%A8%E3%80%82/"/>
    <updated>2012-03-07T08:12:00+08:00</updated>
    <id>http://wangxiaomo.github.com/blog/2012/03/07/3月或3月初？ 感慨。</id>
    <content type="html"><![CDATA[<p>首先。我不是一个喜爱文字的人，但是偶尔也通过文字来表达自己内心的想法。有些东西不想让别人看到，也不知道该写在哪里。乱七八糟的思绪就随便写写吧。
之前的自己也算是一个 night programmer。可自己唯一的缺点就是老以各种事情来当作借口，推脱自己的计划。
LRQ 考研失败了，虽然劝她要坚强，可是自己却也从心里觉得这样的劝解是那么的无力。
还有 2 个月就应该着手找工作了吧。实验室还有着项目，虽然心底是不想做的，可这么多年也熬过来了。
哎。很多东西想说，却又不想展开。
真的。需要尽力而为了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[vim导入外部配置文件]]></title>
    <link href="http://wangxiaomo.github.com/blog/2011/12/11/vim%E5%AF%BC%E5%85%A5%E5%A4%96%E9%83%A8%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
    <updated>2011-12-11T12:16:00+08:00</updated>
    <id>http://wangxiaomo.github.com/blog/2011/12/11/vim导入外部配置文件</id>
    <content type="html"><![CDATA[<p>如同bash一般.使用source命令.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Update.Add Bootstrap.]]></title>
    <link href="http://wangxiaomo.github.com/blog/2011/12/04/Update.Add+Bootstrap./"/>
    <updated>2011-12-04T12:37:00+08:00</updated>
    <id>http://wangxiaomo.github.com/blog/2011/12/04/Update.Add Bootstrap.</id>
    <content type="html"><![CDATA[<p>更新bootstrap到wp中。bootstrap果真是不会设计的程序员的必备品啊。
Update.直接引用github好慢啊。直接拖慢整体的速度...
<span class="label important">Over</span></p>
]]></content>
  </entry>
  
</feed>
